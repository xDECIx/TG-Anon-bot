import config
import telebot

from telebot import types
from database import Database

db = Database("db.db")
bot = telebot.TeleBot(config.TOKEN, threaded=False)


def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üîé–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
    markup.add(item1)
    return markup


def stop_dialog():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("‚òëÔ∏è–°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    item2 = types.KeyboardButton("/stop")
    markup.add(item1, item2)


def stop_search():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('‚ùå–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫')
    markup.add(item1)
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üîé–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
    markup.add(item1)

    bot.send_message(message.chat.id, "–ú–µ–Ω—é", reply_markup=markup)


@bot.message_handler(commands=['menu'])
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üîé–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
    markup.add(item1)

    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç! –ù–∞–∂–º–∏ –Ω–∞ –ø–æ–∏—Å–∫.".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(commands=['stop'])
def stop(message):
    chat_info = db.get_active_chat(message.chat.id)
    if chat_info != False:
        db.delete_chat(chat_info[0])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("üîú–°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥")
        item2 = types.KeyboardButton("/menu")
        markup.add(item1, item2)

        bot.send_message(chat_info[1], "‚ùó–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç", reply_markup=markup)
        bot.send_message(message.chat.id, "‚ùó–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '‚ùó–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥')


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üîé–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞' or message.text == "üîú–°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('‚ùå–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫')
            markup.add(item1)

            chat_two = db.get_chat()  # id —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏ 1—ã–π

            if db.create_chat(message.chat.id, chat_two) == False:
                db.add_queue(message.chat.id)
                bot.send_message(message.chat.id, '‚è≥–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...', reply_markup=markup)
            else:
                mess = "‚úÖ–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥, –Ω–∞–∂–º–∏ /stop"
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("‚òëÔ∏è–°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
                item2 = types.KeyboardButton("/stop")
                markup.add(item1, item2)

                bot.send_message(message.chat.id, mess, reply_markup=markup)
                bot.send_message(chat_two, mess, reply_markup=markup)

        elif message.text == 'Stat':
            bot.send_message(message.chat.id, "<3")

        elif message.text == '‚ùå–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫':
            db.delete_queue(message.chat.id)
            bot.send_message(message.chat.id, '‚ùó–ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ /menu')

        elif message.text == "‚òëÔ∏è–°–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
            chat_info = db.get_active_chat(message.chat.id)
            if chat_info != False:
                if message.from_user.username:
                    bot.send_message(chat_info[1], '@' + message.from_user.username)
                    bot.send_message(message.chat.id, "‚ùó–í—ã —Å–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
                else:
                    bot.send_message(message.chat.id, '‚ùó–í –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –Ω–µ —É–∫–∞–∑–∞–Ω username')
            else:
                bot.send_message(message.chat.id, '‚ùó–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥')

        else:
            if db.get_active_chat(message.chat.id) != False:
                chat_info = db.get_active_chat(message.chat.id)
                bot.send_message(chat_info[1], message.text)
            else:
                bot.send_message(message.chat.id, '‚ùó–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥')


@bot.message_handler(content_types=['voice', 'video_note', 'sticker', 'audio', 'dice', 'photo', 'video', 'animation'])
def hi(message):
    chat_info = db.get_active_chat(message.chat.id)
    bot.copy_message(chat_info[1], message.chat.id, message.message_id)


if __name__ == "__main__":
    bot.infinity_polling('', skip_pending=True)
